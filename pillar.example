# vim: ft=sls

duplicity:
  passphrase: your-super-secret-passphrase
  # FTP example
  # backend: ftp://user:pass@your-server.com/mybackup

  # Multi example
  # First bucket will use other credentials the the default AWS credentials provided below
  backend: multi:///etc/duplicity/multi.json?mode=mirror&onfail=abort
  multi_config: |
    [
      {
        "description": "Main AWS S3 bucket",
        "url": "boto3+s3://main-backup/subdir",
        "env": [
          {
          "name" : "AWS_ACCESS_KEY_ID",
          "value" : "xyz"
          },
          {
          "name" : "AWS_SECRET_ACCESS_KEY",
          "value" : "bar"
          }
        ]
      },
      {
        "description": "Seconday AWS S3 bucket",
        "url": "s3://secondary-backup/subdir"
      },
      {
        "description": "Any FTP backend",
        "url": "ftp://user:pass@your-server.com/mybackup"
      }
    ]

  # args: --s3-endpoint-url https://example.endpoint.com --s3-european-buckets
  # AWS credentials (only required when S3 is used)
  aws_access_key_id: your-access-key-id
  aws_secret_access_key: your-secret-access-key

  # Optional configuration settings (the values used here are the defaults)
  remove_all_but_n_full: 5        # Keep n full backups
  full_if_older_than: '30D'       # Create a full backup after time x
  include_dirs: ['/etc', '/root'] # Include these directories
  exec_pre: ['pg_dumpall']        # Commands to run before taking the backup (e.g. pg_dump, etc)
  exec_post: ['cleanup']          # Commands to run after taking the backup (e.g. cleanup commands, etc)
  verify: true                   # Verify backups (downloads backup to /tmp, which might fill up)
  tempdir: /tmp/duplicity-tmp
  archive_dir: /tmp/duplicity-archive

  # Systemd timer settings
  on_calendar: 02:00
  nice: 10
  io_scheduling_class: 2
  io_scheduling_priority: 7

  # Monit settings (used by the duplicity.monit state)
  max_backup_age: 172800          # Alert if backup is older than max_backup_age seconds

  # SSH options
  ssh:
    known_hosts: github.com  # Add this server to /etc/ssh/ssh_known_hosts

    # Deploy those keys to /root/.ssh
    keys:
      id_ed25519: |
        -----BEGIN OPENSSH PRIVATE KEY-----
        ...
        -----END OPENSSH PRIVATE KEY-----
      id_ed25519.pub: ssh-ed25519 AAAA...
